service : dynamodb-crud-api

provider:
  name: aws
  runtime: nodejs20.x
  stage: dev
  region: us-west-2
  environment:
    DYNAMO_TABLE_NAME: ${self:custom.postsTableName}

custom:
  postsTableName: posts-table-${self:provider.stage}


plugins:
  - serverless-iam-roles-per-function

functions:
  getPost:
    handler: api.getPost
    name: get-post
    memorySize: 128
    timeout: 5
    events:
      - http:
          path: post/{postId}
          method: GET 
    iamRoleStatements:
      - Effect: 'Allow'
        Action:
          - 'dynamodb:GetItem'
        Resource: !GetAtt PostsTable.Arn
  createPost:
    handler: api.createPost
    name: create-post
    memorySize: 128
    timeout: 5
    events:
      - http:
          path: post
          method: POST
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:PutItem"
        Resource: !GetAtt PostsTable.Arn
  updatePost:
    handler: api.updatePost
    name: update-post
    memorySize: 128
    timeout: 5
    events:
        - http: 
            path: post/{postId}
            method: PUT
    iamRolseStatements:
      - Effect: "Allow"
        Action:
          - "dyanmodb:UpdateItem"
        Resource: !GetAtt PostsTable.Arn

  deletePost:
    hander: api.deletePost
    name: delete-post
    memorySize: 128
    timeout: 5
    events:
      - http:
          path: post/{postId}
          method: DELETE
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:DeleteItem"
        Resource: !GetAtt PostsTable.Arn

  getAllPosts:
    handler: api.getAllPosts
    name: get-all-posts
    memorySize: 128
    timeout: 5
    events:
      - http:
        path: posts
        method: GET
    iamRolseStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:Scan"
        Resource: !GetAtt PostsTable.Arn
        